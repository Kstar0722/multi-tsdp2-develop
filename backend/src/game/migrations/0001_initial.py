# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-01 17:24
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('quotes', '0001_initial'),
        ('strategies', '0003_auto_20170901_1224'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type',
                 models.PositiveSmallIntegerField(choices=[(2, 'IB'), (1, 'SIM')], db_index=True, verbose_name='type')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='balance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Boards',
                'verbose_name': 'Board',
            },
        ),
        migrations.CreateModel(
            name='BoardField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(db_index=True, max_length=6, verbose_name='color')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Board')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategies.Strategy')),
            ],
            options={
                'verbose_name_plural': 'Board fields',
                'verbose_name': 'Board field',
            },
        ),
        migrations.CreateModel(
            name='Chip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_volatility',
                 models.DecimalField(decimal_places=2, max_digits=9, verbose_name='target volatility')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Board')),
                ('fields', models.ManyToManyField(to='game.BoardField')),
            ],
            options={
                'verbose_name_plural': 'Chips',
                'verbose_name': 'Chip',
            },
        ),
        migrations.CreateModel(
            name='ChipHasInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.SmallIntegerField(verbose_name='qty')),
                ('chip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Chip')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.Instrument')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(2, 'IMM'), (1, 'MOC')], db_index=True,
                                                          verbose_name='type')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='volume')),
                ('open_datetime', models.DateField(verbose_name='open datetime')),
                ('close_datetime', models.DateField(verbose_name='close datetime')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Board')),
                ('chip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Chip')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.Instrument')),
                ('signals', models.ManyToManyField(to='strategies.Signal')),
            ],
            options={
                'verbose_name_plural': 'Orders',
                'verbose_name': 'Order',
            },
        ),
        migrations.AddField(
            model_name='chip',
            name='instruments',
            field=models.ManyToManyField(through='game.ChipHasInstrument', to='quotes.Instrument'),
        ),
    ]
